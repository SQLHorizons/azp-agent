# Default values for azp-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# OrderedReady | Parallel
podManagementPolicy: OrderedReady
replicaCount: 3
revisionHistoryLimit: 25

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    partition: 0

azp:
  workspace: /workspace
  # https://dev.azure.com/azureAccountName
  url: ''
  token: ''
  pool: 'kubernetes-azp-agents'
  agentName: '$(POD_NAME)'
  image:
    #repository: gmaresca/azp-agent
    #tag: ubuntu-16.04-standard-docker-18.09
    repository: microsoft/vsts-agent
    tag: ubuntu-16.04-docker-18.06.1-ce-standard
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 0.5
      memory: 2Gi
    limits:
      cpu: 1
      memory: 8Gi
  persistence:
    enabled: false
    name: workspace
    labels: {}
    annotations: {}
    accessModes:
    - ReadWriteOnce
    selector: {}
    storageClassName: 'default'
    storage: 50Gi
    #storageLimit: 500Gi
  lifecycle: {}
  extraEnv: []
  #- name: ENV_VAR
  #  value: SomeValue
  #  secret: true
  #  valueFrom: {}
  extraVolumeMounts: []

docker:
  enabled: true
  image:
    repository: docker
    tag: 18.06.3-dind
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 0.5
      memory: 2Gi
    limits:
      cpu: 2
      memory: 16Gi
  persistence:
    enabled: false
    # Set to the same name as azp.persistence.name to use a single PersistentVolumeTemplate
    name: docker
    labels: {}
    annotations: {}
    accessModes:
    - ReadWriteOnce
    selector: {}
    storageClassName: 'default'
    storage: 50Gi
    #storageLimit: 500Gi
  lifecycle: {}
  # Prune containers and images on start, if persistence is enabled
  # Not compatible if the lifecycle.postStart.exec.command is set
  clean: true
  extraEnv: []
  #- name: ENV_VAR
  #  value: SomeValue
  #  secret: true
  #  valueFrom: {}
  extraVolumeMounts: []


imagePullSecrets: []

labels: {}
annotations: {}

podLabels: {}
podAnnotations: {}

pdb:
  enabled: true
  minAvailable: 50%
  #maxUnavailable: 50%

scaling:
  enabled: false
  min: 1
  max: 3
  rate: 10s
  # trace, debug, info, warn, error, fatal, panic
  logLevel: info

  scaleDown:
    max: 1
    delay: 10s

  image:
    repository: docker.io/gmaresca/azp-agent-autoscaler
    tag: 1.0.3
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      cpu: 0.05
      memory: 16Mi
    limits:
      cpu: 0.1
      memory: 32Mi

  liveness:
    failureThreshold: 3
    initialDelaySeconds: 1
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  
  strategy:
    type: Recreate
  
  pdb:
    enabled: false
  
  lifecycle: []
  sidecars: []
  initContainers: []

  # Note: if cpu is enabled, the autoscaler deployment will be disabled
  #cpu: 25

extraVolumes: []
extraVolumeClaimTemplates: []

#dnsPolicy: ClusterFirst
dnsConfig: {}

restartPolicy: Always

nodeSelector: {}

tolerations: []

affinity: {}

securityContext: {}

hostNetwork: false

initContainers: []

sidecars: []
